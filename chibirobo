#!/usr/bin/env bash

set -m

email() {
    subject="$1"

    {
        echo "From: $recipients"
        echo "Subject: ü§ñ $HOSTNAME: $subject" 
        echo "Content-Type: text/html; charset=utf-8"
        echo
        {
            cat
            echo
            echo '-- '
            echo "Mail generated by $myname"
            echo 'Exterminate! Exterminate!'
        } | ansi2html -a
    } | sendmail "$recipients"
}

cleanup() {
    for j in $(jobs -p); do
        kill -- -"$j"
    done
    wait
    for i in emerge{,-fetch}.log; do
        if [ -f "$tmpdir/$i" ]; then
            cat < "$tmpdir/$i" >> /var/log/"$i"
        fi
    done
    [ -f "$tmpdir"/.chibirobo ] && rm -rf "$tmpdir"
}

do-sync() {
    emaint sync -A || return $?
    eix-diff > "$tmpdir"/eix-diff.txt

    if [[ -s $tmpdir/eix-diff.txt ]]; then
        {
            echo "These installed packages got updated by the Gentoo maintainers:"
            echo
            cat "$tmpdir"/eix-diff.txt
        } | email "üéÅ Repository updates!"
    fi
}

do-emerge() {
    emerge --color n --keep-going -qvuDN --with-bdeps=y --accept-properties=-interactive @world
}

installed-size() {
    equery -q size -b \* \
    | sed 's/.*size(\([0-9]\+\))/\1/' \
    | awk 'BEGIN{x=0}{x+=$0}END{print x}' \
    | numfmt --to=iec-i --format=%fB
}

while [ $# -gt 0 ]; do
    opt="$1"
    shift
    case "$opt" in
    -v)
        verbose=1;;
    --nosync)
        nosync=1;;
    esac
done

myname="$0"
recipients=alex.iris.parker@gmail.com
tmpdir="$(mktemp -d)" || exit 1
errorlog="$tmpdir/stderr.txt"

trap cleanup 0

chown portage:portage "$tmpdir"
chmod 770 "$tmpdir"

export FORCE_COLORS=true
export FEATURES=-candy
export EMERGE_LOG_DIR="$tmpdir"
export DIFF_FORMAT_NEW=
export DIFF_FORMAT_DELETE=
export DIFF_ONLY_INSTALLED=true

touch "$tmpdir/.chibirobo" || exit 1

{
    equery l -F "\$cpv" @module-rebuild | \
        tail -n +1 > "$tmpdir"/dracut-packages.txt
} &
equery_job=$!

exec 2>"$errorlog"

if [ -z "$verbose" ]; then
    exec 1>"$tmpdir/stdout.txt"
else
    tail -f "$errorlog" >&2 &
fi


if [ -z "$nosync" ]; then
    do-sync || {
        {
            echo "I couldn't sync the portage repositories!"
            echo
            echo "Log:"
            echo
            cat "$errorlog"
        } | email "Help, I can't sync!"
        exit
    }
fi

if ! do-emerge; then
    {
        echo "I couldn't update everything in @world."
        echo
        echo "Log:"
        echo
        cat "$errorlog"
    } | email "‚ùå Help, I couldn't update @world!"
    exit
fi

revdep-rebuild -- --keep-going -qv || {
    {
        echo "I couldn't ensure linking consistency."
        echo
        echo "Log:"
        echo
        cat "$errorlog"
    } | email "‚ùå Help, I couldn't revdep-rebuild!"
    exit
}

grep -F ') Merging (' "$tmpdir"/emerge.log | awk -v FS='[():]' '{print $5}' > "$tmpdir"/merged.txt
declare -a merged
mapfile -t merged < "$tmpdir"/merged.txt
touch "$tmpdir"/progress.txt

if [[ ${#merged[@]} -gt 0 ]]; then
    {
        echo "I merged these packages:"
        echo
        cat "$tmpdir"/merged.txt
        echo
    } >> "$tmpdir"/progress.txt
fi

wait "$equery_job"

if grep -qFf "$tmpdir"/dracut-packages.txt < "$tmpdir"/merged.txt; then

    if dracut --force; then
        echo "I updated the init ram disk." >> "$tmpdir"/progress.txt
    else
        {
            echo "There were kernel module updates, but dracut failed..." 
            echo
            echo "Log:"
            echo
            cat "$errorlog"
        } | email "‚ùå Help, I couldn't update initramfs!"
    fi

elif grep -qF sys-kernel/gentoo-sources < "$tmpdir"/merged.txt; then
    if update-kernel; then
        {
            echo "I updated the kernel to $(readlink /usr/src/linux|cut -d- -f2-)."
            echo
        } >> "$tmpdir"/progress.txt
    else
        {
            echo "There was a kernel update, but the update-kernel script failed..."
            echo
            echo "Log:"
            echo
            cat "$errorlog"
        } | email "‚ùå Help, I couldn't update the kernel!"
    fi
fi

: | needrestart -qnrl | grep -Fv 'systemctl restart user@' > "$tmpdir"/needrestart.txt

if [[ -s "$tmpdir"/needrestart.txt ]]; then
    {
        echo "These services need to be restarted:"
        echo
        sed 's/^/\t/' "$tmpdir"/needrestart.txt
    } >> "$tmpdir"/progress.txt
fi

if eclean -d distfiles | tail -n 3 > "$tmpdir"/eclean.txt; then
    if [[ -s "$tmpdir"/eclean.txt ]]; then
        {
            echo "I cleaned the distfiles"
            echo
            cat "$tmpdir"/eclean.txt
            echo
        } >> "$tmpdir"/progress.txt
    fi
else
    {
        echo "There was a problem running eclean."
        echo
    } >> "$tmpdir"/progress.txt
fi

{
    echo "Total installed package size is now: $(installed-size)"
    echo
    echo "Goodbye!"
} >> "$tmpdir"/progress.txt

email "‚úÖ Chibirobo ran successfully!" < "$tmpdir"/progress.txt
